name: Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  Linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Building release
        run: |
          make linux_release
      - name: Upload release file
        uses: actions/upload-artifact@v1
        with:
          name: query_diet-${{ steps.tag.outputs.tag }}-linux.tar.gz
          path: releases/query_diet-${{ steps.tag.outputs.tag }}-linux.tar.gz
      - name: Upload checksum file
        uses: actions/upload-artifact@v1
        with:
          name: query_diet-${{ steps.tag.outputs.tag }}-linux.sha256sum
          path: releases/query_diet-${{ steps.tag.outputs.tag }}-linux.sha256sum

  Release:
    needs: [Linux]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get tag
        id: tag
        run: |
          echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
      - name: Download Linux release file
        uses: actions/download-artifact@master
        with:
          name: query_diet-${{ steps.tag.outputs.tag }}-linux.tar.gz
          path: releases/query_diet-${{ steps.tag.outputs.tag }}-linux.tar.gz
      - name: Download Linux checksum file
        uses: actions/download-artifact@master
        with:
          name: query_diet-${{ steps.tag.outputs.tag }}-linux.sha256sum
          path: releases/query_diet-${{ steps.tag.outputs.tag }}-linux.sha256sum
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          release_name: ${{ steps.tag.outputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Linux release file asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/query_diet-${{ steps.tag.outputs.tag }}-linux.tar.gz/query_diet-${{ steps.tag.outputs.tag }}-linux.tar.gz
          asset_name: query_diet-${{ steps.tag.outputs.tag }}-linux.tar.gz
          asset_content_type: application/gzip
      - name: Upload Linux checksum file asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: releases/query_diet-${{ steps.tag.outputs.tag }}-linux.sha256sum/query_diet-${{ steps.tag.outputs.tag }}-linux.sha256sum
          asset_name: query_diet-${{ steps.tag.outputs.tag }}-linux.sha256sum
          asset_content_type: text/pain
      - name: Install Poetry
        run: |
          python get-poetry.py -y
      - name: Install dependencies
        run: |
          source $HOME/.poetry/env
          poetry install --no-dev
      - name: Build project for distribution
        run: |
          source $HOME/.poetry/env
          poetry run poetry build
      - name: Publish to PyPI
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          source $HOME/.poetry/env
          poetry run poetry publish
